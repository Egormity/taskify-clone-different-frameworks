/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteImport } from './routes/auth'
import { Route as LayoutHelloRouteImport } from './routes/_layout-hello'
import { Route as LayoutAuthenticatedRouteImport } from './routes/_layout-authenticated'
import { Route as IndexRouteImport } from './routes/index'
import { Route as LayoutHelloHelloRouteImport } from './routes/_layout-hello/hello'
import { Route as LayoutAuthenticatedLayoutWorkspacesIndexRouteImport } from './routes/_layout-authenticated/layout-workspaces/index'
import { Route as LayoutAuthenticatedLayoutBoardIndexRouteImport } from './routes/_layout-authenticated/layout-board/index'

const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutHelloRoute = LayoutHelloRouteImport.update({
  id: '/_layout-hello',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutAuthenticatedRoute = LayoutAuthenticatedRouteImport.update({
  id: '/_layout-authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutHelloHelloRoute = LayoutHelloHelloRouteImport.update({
  id: '/hello',
  path: '/hello',
  getParentRoute: () => LayoutHelloRoute,
} as any)
const LayoutAuthenticatedLayoutWorkspacesIndexRoute =
  LayoutAuthenticatedLayoutWorkspacesIndexRouteImport.update({
    id: '/layout-workspaces/',
    path: '/layout-workspaces/',
    getParentRoute: () => LayoutAuthenticatedRoute,
  } as any)
const LayoutAuthenticatedLayoutBoardIndexRoute =
  LayoutAuthenticatedLayoutBoardIndexRouteImport.update({
    id: '/layout-board/',
    path: '/layout-board/',
    getParentRoute: () => LayoutAuthenticatedRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthRoute
  '/hello': typeof LayoutHelloHelloRoute
  '/layout-board': typeof LayoutAuthenticatedLayoutBoardIndexRoute
  '/layout-workspaces': typeof LayoutAuthenticatedLayoutWorkspacesIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthRoute
  '/hello': typeof LayoutHelloHelloRoute
  '/layout-board': typeof LayoutAuthenticatedLayoutBoardIndexRoute
  '/layout-workspaces': typeof LayoutAuthenticatedLayoutWorkspacesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_layout-authenticated': typeof LayoutAuthenticatedRouteWithChildren
  '/_layout-hello': typeof LayoutHelloRouteWithChildren
  '/auth': typeof AuthRoute
  '/_layout-hello/hello': typeof LayoutHelloHelloRoute
  '/_layout-authenticated/layout-board/': typeof LayoutAuthenticatedLayoutBoardIndexRoute
  '/_layout-authenticated/layout-workspaces/': typeof LayoutAuthenticatedLayoutWorkspacesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/auth' | '/hello' | '/layout-board' | '/layout-workspaces'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/auth' | '/hello' | '/layout-board' | '/layout-workspaces'
  id:
    | '__root__'
    | '/'
    | '/_layout-authenticated'
    | '/_layout-hello'
    | '/auth'
    | '/_layout-hello/hello'
    | '/_layout-authenticated/layout-board/'
    | '/_layout-authenticated/layout-workspaces/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LayoutAuthenticatedRoute: typeof LayoutAuthenticatedRouteWithChildren
  LayoutHelloRoute: typeof LayoutHelloRouteWithChildren
  AuthRoute: typeof AuthRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout-hello': {
      id: '/_layout-hello'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutHelloRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout-authenticated': {
      id: '/_layout-authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutAuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout-hello/hello': {
      id: '/_layout-hello/hello'
      path: '/hello'
      fullPath: '/hello'
      preLoaderRoute: typeof LayoutHelloHelloRouteImport
      parentRoute: typeof LayoutHelloRoute
    }
    '/_layout-authenticated/layout-workspaces/': {
      id: '/_layout-authenticated/layout-workspaces/'
      path: '/layout-workspaces'
      fullPath: '/layout-workspaces'
      preLoaderRoute: typeof LayoutAuthenticatedLayoutWorkspacesIndexRouteImport
      parentRoute: typeof LayoutAuthenticatedRoute
    }
    '/_layout-authenticated/layout-board/': {
      id: '/_layout-authenticated/layout-board/'
      path: '/layout-board'
      fullPath: '/layout-board'
      preLoaderRoute: typeof LayoutAuthenticatedLayoutBoardIndexRouteImport
      parentRoute: typeof LayoutAuthenticatedRoute
    }
  }
}

interface LayoutAuthenticatedRouteChildren {
  LayoutAuthenticatedLayoutBoardIndexRoute: typeof LayoutAuthenticatedLayoutBoardIndexRoute
  LayoutAuthenticatedLayoutWorkspacesIndexRoute: typeof LayoutAuthenticatedLayoutWorkspacesIndexRoute
}

const LayoutAuthenticatedRouteChildren: LayoutAuthenticatedRouteChildren = {
  LayoutAuthenticatedLayoutBoardIndexRoute:
    LayoutAuthenticatedLayoutBoardIndexRoute,
  LayoutAuthenticatedLayoutWorkspacesIndexRoute:
    LayoutAuthenticatedLayoutWorkspacesIndexRoute,
}

const LayoutAuthenticatedRouteWithChildren =
  LayoutAuthenticatedRoute._addFileChildren(LayoutAuthenticatedRouteChildren)

interface LayoutHelloRouteChildren {
  LayoutHelloHelloRoute: typeof LayoutHelloHelloRoute
}

const LayoutHelloRouteChildren: LayoutHelloRouteChildren = {
  LayoutHelloHelloRoute: LayoutHelloHelloRoute,
}

const LayoutHelloRouteWithChildren = LayoutHelloRoute._addFileChildren(
  LayoutHelloRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LayoutAuthenticatedRoute: LayoutAuthenticatedRouteWithChildren,
  LayoutHelloRoute: LayoutHelloRouteWithChildren,
  AuthRoute: AuthRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
